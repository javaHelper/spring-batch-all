<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/batch	http://www.springframework.org/schema/batch/spring-batch-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

    <!-- Step will need a transaction manager -->
    <bean id="transactionManager" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />

    <bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean"/>

    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository"/>
    </bean>

    <bean id="myConverter" class="com.example.MyConverter" />

    <bean id="conversionService" class="com.example.MyConversionService">
        <property name="myConverter" ref="myConverter" />
    </bean>

    <batch:job id="employeeJob">
        <batch:step id="step1">
            <batch:tasklet transaction-manager="transactionManager">
                <batch:chunk reader="flatFileItemReader"
                             writer="employeeWriter"
                             commit-interval="10"/>
            </batch:tasklet>
        </batch:step>
    </batch:job>

    <bean id="locale" class="java.util.Locale">
        <constructor-arg value="en" />
        <constructor-arg value="US" />
    </bean>

<!--    <bean id="dateEditor" class="org.springframework.beans.propertyeditors.CustomDateEditor">-->
<!--        <constructor-arg>-->
<!--            <bean class="java.time.format.DateTimeFormatter">-->
<!--                <constructor-arg value="MMM d yyyy h:mm:ss:SSSa" />-->
<!--            </bean>-->
<!--        </constructor-arg>-->
<!--        <constructor-arg value="true" />-->
<!--    </bean>-->

<!--    <bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">-->
<!--        <property name="customEditors">-->
<!--            <map>-->
<!--                <entry key="java.util.Date">-->
<!--                    <ref bean="dateEditor" />-->
<!--                </entry>-->
<!--            </map>-->
<!--        </property>-->
<!--    </bean>-->


    <bean id="flatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <property name="resource" value="classpath:employee.csv" />
        <property name="linesToSkip" value="1" />
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="domain" />
                        <property name="conversionService" ref="conversionService" />
                    </bean>
                </property>
                <property name="lineTokenizer">
                    <!-- A tokenizer class to be used when items in input record are separated by specific characters -->
                    <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="delimiter" value=","/>
                        <property name="names" value="empId,firstName,lastName,age,email,joiningDate" />
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="employeeWriter" class="com.example.EmployeeItemWriter" />
    <bean id="domain" class="com.example.Employee" scope="prototype" />
</beans>